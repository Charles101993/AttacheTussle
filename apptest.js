var express = require('express');var app = express();var serv = require('http').Server(app); app.get('/',function(req, res) {    res.sendFile(__dirname + '/index.html');});app.use('/assets',express.static(__dirname + '/assets'));serv.listen(10000);console.log("Server started."); var io = require('socket.io')(serv,{}); var SOCKET_LIST = [];var READY_QUEUE = [];var processRequest = function(socket){	socket.once('play', function(data){		console.log('player searching for match');				READY_QUEUE.push(socket);				if(READY_QUEUE.length > 1){			console.log('match found');			console.log('ready queue: ' + READY_QUEUE.length);						var player1 = READY_QUEUE.shift();			var player2 = READY_QUEUE.shift();						// notify clients that an opponent was found			player1.emit('opponent found', 'player 1');			player2.emit('opponent found', 'player 2');						var player1_ready = false;			var player2_ready = false;						player1.on('player character', player1_char_call = function(player_char_counter){				player2.emit('opponent character', player_char_counter);			});						player2.on('player character', player2_char_call = function(player_char_counter){					player1.emit('opponent character', player_char_counter);			});						player1.once('player ready', function(player_ready){				console.log('player ready');								// remove character_select listeners				player1.removeListener('player character', player1_char_call);								player2.emit('opponent ready', player_ready);									player1_ready = true;						});						player2.once('player ready', function(player_ready){				console.log('player ready');								// remove character_select listeners				player2.removeListener('player character', player2_char_call);								player1.emit('opponent ready', player_ready);				player2_ready = true;							});						// do nothing while both players are not ready			while( !(player1_ready && player2_ready) );						var game_end = false;						player1.on('input', player1_input = function(input){				player2.emit('opponent input', input);			});						player2.on('input', player2_input = function(input){				player1.emit('opponent input', input);			});								player1.once('game end', function(input){				game_end = true;				player1.removeListener('input', player1_input);			});						player2.once('game end', function(input){				game_end = true;				player2.removeListener('input', player2_input);			});						// do nothing until game end			while(!game_end);						player1.once('game end choice', function(input){				if(input == 'main menu'){					processRequest(player1);				}									if(input == 'rematch'){									}			});						}			});}io.sockets.on('connection', function(socket){    console.log('socket connection');		SOCKET_LIST.push(socket);		processRequest(socket);		});