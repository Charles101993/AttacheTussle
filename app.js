var express = require('express');var app = express();var serv = require('http').Server(app); app.get('/',function(req, res) {    res.sendFile(__dirname + '/index.html');});app.use('/assets',express.static(__dirname + '/assets'));serv.listen(10000);console.log("Server started."); var io = require('socket.io')(serv,{}); var SOCKET_LIST = [];var READY_QUEUE = [];var processRequest = function(socket){	socket.once('play', function(data){		console.log('player searching for match');				READY_QUEUE.push(socket);				if(READY_QUEUE.length > 1){			console.log('match found');			console.log('ready queue: ' + READY_QUEUE.length);						var player1 = READY_QUEUE.shift();			var player2 = READY_QUEUE.shift();						// notify clients that an opponent was found			player1.emit('opponent found', 'player 1');			player2.emit('opponent found', 'player 2');						processSession(player1,player2);		}			});}var processSession = function(player1,player2){	var player1_ready = false;	var player2_ready = false;		player1.on('player character', player1_char_call = function(player_char_counter){		player2.emit('opponent character', player_char_counter);	});		player2.on('player character', player2_char_call = function(player_char_counter){			player1.emit('opponent character', player_char_counter);	});		player1.once('player ready', function(player_ready){		console.log('player ready');				// remove character_select listeners		player1.removeListener('player character', player1_char_call);				player2.emit('opponent ready', player_ready);					player1_ready = true;		});		player2.once('player ready', function(player_ready){		console.log('player ready');				// remove character_select listeners		player2.removeListener('player character', player2_char_call);				player1.emit('opponent ready', player_ready);		player2_ready = true;			});		var game_end = false;		player1.on('input', player1_input = function(input){		player2.emit('opponent input', input);	});		player2.on('input', player2_input = function(input){		player1.emit('opponent input', input);	});				player1.once('game end', function(input){		game_end = true;		player1.removeListener('input', player1_input);	});		player2.once('game end', function(input){		game_end = true;		player2.removeListener('input', player2_input);	});	player1.on('purse swap', player1_purse_swap = function(input){		player2.emit('purse swap', true);	});		player2.on('purse swap', player2_purse_swap = function(input){		player1.emit('purse swap', true);	});	// do nothing until game end	//while(!game_end);		var player1_rematch = null;	var player2_rematch = null;			player1.once('game end choice', game_end_func = function(input){		if(input == 'main menu'){			processRequest(player1);			player2.emit('rematch', false);			player1_rematch = false;			if(player2_rematch == true){				processRequest(player2);			}		}							else{			player1_rematch = true;			player2.emit('rematch', true);			if(player2_rematch != false){				player1.removeListener('game end choice', game_end_func);				processSession(player1,player2);			}		}	});		player2.once('game end choice', game_end_func = function(input){		if(input == 'main menu'){			processRequest(player2);			player1.emit('rematch', false);			player2_rematch = false;			if(player1_rematch != false){				player1.removeListener('game end choice', game_end_func);				processRequest(player1);			}		}							else{			player2_rematch = true;			player1.emit('rematch', true);			if(player1_rematch == true){				processSession(player1,player2);			}		}	});		}io.sockets.on('connection', function(socket){    console.log('socket connection');		SOCKET_LIST.push(socket);		processRequest(socket);		});